currentBuild.displayName = "Amazon#"+currentBuild.number
pipeline{
	agent any
		stages{
			stage('Continuous Download'){
				steps{
					script{
						try{
							git "https://github.com/ps442277/DevJava.git"
							echo 'Continuous Download'
						}
						catch(Exception e){
							mail bcc: '', body:'Unable to download code from git',cc:'',from:'', replyTo:'',subject:'Download failure',to:'demo@gmail.com'
							exit(1)
						}
					}
				}
			}
			stage('Continuous Build'){
				steps{
					script{
						try{	
							sh "mvn package"
							echo 'Continous Build and package'
						}
						catch(Exception e){
							mail bcc: '', body:'Unable to build and package code',cc:'',from:'', replyTo:'',subject:'Build failure',to:'demo@gmail.com'
							exit(1)
						}
					}
				}
			}
			stage('Continuous Deploy'){
				steps{
					sshagent(['tomcat-new']) {
						sh """
							scp -o StrictHostKeyChecking=no /home/ubuntu/.jenkins/workspace/pipeline-proj1/webapp/target/webapp.war ubuntu@ip-172-31-10-234:/var/lib/tomcat9/webapps/
							ssh ubuntu@ip-172-31-10-234 sudo service tomcat9 stop
							ssh ubuntu@ip-172-31-10-234 sudo service tomcat9 start
						"""
					}
					echo 'Continuous Deploy to QA server	'
				}
			}
			stage('Continuous Test'){
				steps{
					git "https://github.com/ps442277/FunctionalTest.git"
					sh 'java -jar /home/ubuntu/.jenkins/workspace/Testing/testing.jar'
					echo 'Continuous Testing passed'
				}
			}
		}
}	

